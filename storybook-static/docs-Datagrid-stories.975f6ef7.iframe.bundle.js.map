{"version":3,"file":"docs-Datagrid-stories.975f6ef7.iframe.bundle.js","mappings":";;;;AAOA;AACA;;;;;AAKA;;AAEA;;AAIA;;;AAKA;;;;AAMA;;;;;;;;;;;;ACLA;AACA;;;;;;;AAOA;AAGA;;;AAGA;;AAIA;AACA;AAEA;;AAEA;;AAIA;;;AAKA;AACA;;;AAMA;;;;;;;;AAaA","sources":["webpack://react-ads-data-grid/./src/components/Filter/Component/FilterCard.jsx","webpack://react-ads-data-grid/./src/components/Filter/Component/SwitcherButton.jsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { Dropdown, getColor } from \"akeneo-design-system\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${getColor(\"grey\", 100)};\r\n  background: ${getColor(\"white\")};\r\n  height: 44px;\r\n  box-sizing: border-box;\r\n  gap: 10px;\r\n  :focus-within {\r\n    border-bottom: 1px solid ${getColor(\"brand\", 100)};\r\n  }\r\n  ${(props) =>\r\n    undefined !== props.sticky &&\r\n    css`\r\n      position: sticky;\r\n      top: ${props.sticky}px;\r\n      z-index: 9;\r\n    `}\r\n`;\r\n\r\nconst CardContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FilterCard = ({ children, title, ...rest }) => {\r\n  return (\r\n    <Container {...rest}>\r\n      <CardContainer>\r\n        <Dropdown.Title>{title}</Dropdown.Title>\r\n      </CardContainer>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","import { forwardRef } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport {\r\n  ArrowDownIcon,\r\n  CloseIcon,\r\n  CommonStyle,\r\n  getColor,\r\n  getFontSize,\r\n  useId,\r\n} from \"akeneo-design-system\";\r\n\r\nconst SwitcherButtonContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  > *:nth-child(2) {\r\n    opacity: 0;\r\n    transition: opacity 0.2s;\r\n  }\r\n  &:hover > *:nth-child(2) {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst LabelAndValueContainer = styled.button`\r\n  ${CommonStyle};\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: baseline;\r\n  flex-direction: ${(props) => (props.$inline ? \"row\" : \"column\")};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  ${(props) =>\r\n    props.$inline\r\n      ? css`\r\n          margin-right: 3px;\r\n          color: ${getColor(\"grey\", 140)};\r\n        `\r\n      : css`\r\n          color: ${getColor(\"grey\", 100)};\r\n          text-transform: uppercase;\r\n          font-size: ${getFontSize(\"small\")};\r\n        `}\r\n`;\r\n\r\nconst LabelAndArrow = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Value = styled.span`\r\n  color: ${(props) =>\r\n    props.$inline ? getColor(\"brand\", 100) : getColor(\"grey\", 140)};\r\n  margin-right: 5px;\r\n  text-align: left;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  border: none;\r\n  background: none;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  flex-shrink: 0;\r\n`;\r\n\r\n/**\r\n * Switchers are used to switch the filter on the context or the content of a page or a table.\r\n */\r\nexport const SwitcherButton = forwardRef(\r\n  (\r\n    {\r\n      label,\r\n      children,\r\n      onClick,\r\n      deletable = false,\r\n      onDelete,\r\n      inline = true,\r\n      showArrow = false,\r\n      ...rest\r\n    },\r\n    forwardedRef\r\n  ) => {\r\n    const buttonId = useId(\"button_\");\r\n\r\n    const handleDelete = () => deletable && onDelete?.();\r\n    \r\n    return (\r\n      <SwitcherButtonContainer ref={forwardedRef} {...rest}>\r\n        <LabelAndValueContainer\r\n          id={buttonId}\r\n          onClick={onClick}\r\n          $inline={inline}\r\n        >\r\n          <Label htmlFor={buttonId} $inline={inline}>\r\n            {label ? (inline ? `${label}` : label) : \"\"}\r\n          </Label>\r\n          <LabelAndArrow>\r\n            <Value $inline={inline}>{children}</Value>\r\n            {showArrow && <ArrowDownIcon size={inline ? 16 : 10} />}\r\n          </LabelAndArrow>\r\n        </LabelAndValueContainer>\r\n        {deletable && (\r\n          <CloseButton onClick={handleDelete}>\r\n            <CloseIcon size={10} />\r\n          </CloseButton>\r\n        )}\r\n      </SwitcherButtonContainer>\r\n    );\r\n  }\r\n);"],"names":[],"sourceRoot":""}